//
//  BoardTests.swift
//  snakeTests
//
//  Created by Nicole Han on 2018-01-26.
//  Copyright Â© 2018 GoldThumb Inc. All rights reserved.
//

import XCTest
@testable import snake

class BoardTests: XCTestCase {
    
    /*
     
    
     . . . . . .
     . . . . . .
     . o o . . .
     . . o o . .
     . . . . Q .
     . . . . . .
     . . Q . . .
     . . . . . .
     
     6 . . . . . . . .
     5 . . . . . . . x
     4 . . . o o . . .
     3 . . . . . . . .
     2 . . x . . . . .
     1 x . . . . . . .
     
     
     
     . . . . . . Q .
     . . . . . . . .
     . . Q . . . . .
     . . . . . . . .
     . . . . . . . .
     . . . . . . . .
     . . . . . . . .
     . . . o o c . Q
     . . . o . . . .
     . o o o . . . .
     . . . . . . . .
     . . . . . . . .
     
     
     . . . . . . Q .
     . . . . . . . .
     . . Q . . . . .
     . . . . . . . .
     . . . . . . . .
     . . . . . . . .
     . . . . . . . .
     . . . o o o C Q
     . . . o . . . .
     . . o o . . . .
     . . . . . . . .
     . . . . . . . .
     
     
     . . . . . . Q .
     . . . . . . . .
     . . Q . . . . .
     . . . . . . . .
     . . . . . . . .
     . . . . . . . .
     . . . . . . . .
     . . . o o o o o
     . . . o . . . .
     . . . o . . . .
     . . . o . . . .
     . . . . . . . .
     
     . . . . . . Q .
     . . . . . . . .
     . . Q . . . . .
     . . . . . . . .
     . . . . . . . .
     . . . . . . . .
     . . . . . . . o
     . . . o o o o o
     . . . o . . . .
     . . . o . . . .
     . . . . . . . .
     . . . . . . . .
     
     . . . . . . Q .
     . . . . . . . .
     . . Q . . . . .
     . . . . . . . .
     . . . . . . . .
     . . . . . . . o
     . . . . . . . o
     . . . o o o o o
     . . . o . . . .
     . . . . . . . .
     . . . . . . . .
     . . . . . . . .
     
     . . . . . . Q .
     . . . . . . . .
     . . Q . . . . .
     . . . . . . . .
     . . . . . . . .
     . . . . . . o o
     . . . . . . . o
     . . . o o o o o
     . . . . . . . .
     . . . . . . . .
     . . . . . . . .
     . . . . . . . .
     
     . . . . . . Q .
     . . . . . . . .
     . . Q . . . . .
     . . . . . . . .
     . . . . . . . .
     . . . . . o o o
     . . . . . . . o
     . . . . o o o o
     . . . . . . . .
     . . . . . . . .
     . . . . . . . .
     . . . . . . . .
     
     . . . . . . Q .
     . . . . . . . .
     . . Q . . . . .
     . . . . . . . .
     . . . . . . . .
     . . . . o o o o
     . . . . . . . o
     . . . . . o o o
     . . . . . . . .
     . . . . . . . .
     . . . . . . . .
     . . . . . . . .
     
     . . . . . . Q .
     . . . . . . . .
     . . Q . . . . .
     . . . . . . . .
     . . . . . . . .
     . . . o o o o o
     . . . . . . . o
     . . . . . . o o
     . . . . . . . .
     . . . . . . . .
     . . . . . . . .
     . . . . . . . .
     
     . . . . . . Q .
     . . . . . . . .
     . . Q . . . . .
     . . . . . . . .
     . . . . . . . .
     . . o o o o o o
     . . . . . . . o
     . . . . . . . o
     . . . . . . . .
     . . . . . . . .
     . . . . . . . .
     . . . . . . . .
     
     . . . . . . Q .
     . . . . . . . .
     . . Q . . . . .
     . . . . . . . .
     . . u . . . . .
     . . o o o o o o
     . . . . . . . o
     . . . . . . . .
     . . . . . . . .
     . . . . . . . .
     . . . . . . . .
     . . . . . . . .
     
     . . . . . . Q .
     . . . . . . . .
     . . Q . . . . .
     . . U . . . . .
     . . o . . . . .
     . . o o o o o o
     . . . . . . . .
     . . . . . . . .
     . . . . . . . .
     . . . . . . . .
     . . . . . . . .
     . . . . . . . .
     
     . . . . . . Q .
     . . . . . . . .
     . . o . . . . .
     . . o . . . . .
     . . o . . . . .
     . . o o o o o o
     . . . . . . . .
     . . . . . . . .
     . . . . . . . .
     . . . . . . . .
     . . . . . . . .
     . . . . . . . .
    
     11
     10
      6 . . . . . . . .
      5 . . . . . . . .
      4 . . . . . . . .
      3 . . . . . . . .
      2 . . . . . . . .
      1 . . . . . . . .

     
    */

    func testBoard() {
        let rows = 12
        let cols = 6
        
        for y in 1...rows {
            if rows - y + 1 >= 10 {
                print("\(rows - y + 1)", terminator:" ")
            } else {
                print(" \(rows - y + 1)", terminator:" ")
            }
            for _ in 1...cols {
                print(".", terminator:" ")
            }
            print(" ", terminator: "\n")
        }
    }
    
    func testCreateBoardDesc() {
        let boardDesc = createBoardDesc()
        
        print(boardDesc)
    }
    
    func createBoardDesc() -> String {
        
        let rows = 12
        let cols = 8
        
        var boardString = ""
        for y in 1...rows {
            if rows - y + 1 >= 10 {

                boardString += "\(rows - y + 1) "
            } else {
                boardString += " \(rows - y + 1) "
            }
            
            for _ in 1...cols {
                boardString += ". "
            }
            boardString += "\n"
        }
        return boardString
    }
}
